name: Build Kiali Operator

on:
  pull_request:
    paths:
      - ".github/workflows/build-kiali-operator.yaml"
      - "kiali-operator/**"
      - "docker/kiali-operator/**"
  workflow_dispatch:
    inputs:
      epoch:
        description: Release epoch
        required: true
        type: number
        default: 0

env:
  OPERATOR_BASE_IMAGE_REPO: ghcr.io/${{ github.repository_owner }}/ansible-operator
  OPERATOR_BASE_IMAGE_VERSION: v1.38.1

jobs:
  determine-version:
    name: Determine kiali-operator version
    runs-on: ubuntu-latest

    outputs:
      version: ${{ steps.image-version.outputs.version }}
      full-version: ${{ steps.full-image-version.outputs.version }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Determine image version
        id: image-version
        run: |
          VERSION=$(cat kiali-operator/VERSION)
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Determine full image version with epoch suffix
        id: full-image-version
        run: |
          if [[ -n "${{ inputs.epoch }}" ]]; then
            echo "version=${{ steps.image-version.outputs.version }}-${{ inputs.epoch }}" >> $GITHUB_OUTPUT
          else
            echo "version=${{ steps.image-version.outputs.version }}" >> $GITHUB_OUTPUT
          fi

  build-kiali-operator:
    name: Build kiali-operator image
    runs-on: ${{ matrix.platform == 'linux/arm64' && 'ubuntu-22.04-arm' || 'ubuntu-latest' }}
    needs: [determine-version]
    permissions:
      actions: read
      contents: read
      id-token: write
      packages: write

    strategy:
      matrix:
        platform: [linux/amd64, linux/arm64]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Determine platform tag
        id: platform-tag
        run: |
          ARCH=$(echo "${{ matrix.platform }}" | sed 's/linux\///g')
          echo "tag=${{ needs.determine-version.outputs.full-version }}-${ARCH}" >> $GITHUB_OUTPUT

      - name: Build and push kiali-operator image
        uses: docker/build-push-action@v6
        with:
          platforms: ${{ matrix.platform}}
          context: kiali-operator
          file: docker/kiali-operator/Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          build-args: |
            OPERATOR_BASE_IMAGE_REPO=${{ env.OPERATOR_BASE_IMAGE_REPO }}
            OPERATOR_BASE_IMAGE_VERSION=${{ env.OPERATOR_BASE_IMAGE_VERSION }}
          tags: |
            ghcr.io/${{ github.repository_owner }}/kiali-operator:${{ steps.platform-tag.outputs.tag }}
        env:
          SOURCE_DATE_EPOCH: 315532800

  merge-kiali-operator-manifests:
    name: Merge kiali-operator image manifests
    if: github.event_name != 'pull_request'
    runs-on: ubuntu-latest

    needs: [determine-version, build-kiali-operator]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup crane
        uses: imjasonh/setup-crane@v0.4
        with:
          version: latest-release

      - name: Merge manifests and push to image registry
        env:
          IMAGE_NAME: ghcr.io/${{ github.repository_owner }}/kiali-operator
          TAGS: ${{ needs.determine-version.outputs.version }} ${{ needs.determine-version.outputs.full-version }}
        run: |
          FULL_VERSION=${{ needs.determine-version.outputs.full-version }}

          for TAG in ${TARGET_TAGS}; do
            crane index append \
              -m "${IMAGE_NAME}:${FULL_VERSION}-amd64" \
              -m "${IMAGE_NAME}:${FULL_VERSION}-arm64" \
              -t "${IMAGE_NAME}:${TAG}"
          done
